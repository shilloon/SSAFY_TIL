T = int(input())

for test_case in range(1, T+1):

    N, M = map(int, input().split())

    matrix = [list(map(int, input().split())) for _ in range(N)]

    # 누적합 matrix
    prefix_sum = [[0] * (N+1) for _ in range(N+1)]

    fly_catch_max = 0

    # 각 위치의 누적합 구하기
    for i in range(N):

        for j in range(N):

            prefix_sum[i+1][j+1] = (matrix[i][j] + prefix_sum[i][j+1] + prefix_sum[i+1][j] - prefix_sum[i][j])

    # 파리의 최대 개수 구하기
    for i in range(M, N+1):

        for j in range(M, N+1):

            fly_catch = prefix_sum[i][j] - prefix_sum[i-M][j] - prefix_sum[i][j-M] + prefix_sum[i-M][j-M]

            fly_catch_max = max(fly_catch_max, fly_catch)

    print(f'#{test_case} {fly_catch_max}')
