import sys
sys.stdin = open("input.txt", "r")


def dfs(x, y, count, direct):

    global result

    if x < 0 or y < 0 or x >= N or y >= N:
        return

    if visited[desert_cafe[x][y]]:
        fx, fy = start_target
        if x == fx and y == fy:
            result = max(result, count)
            return
        else:
            return

    if direct == 4:
        return

    visited[desert_cafe[x][y]] = True
    dx, dy = dxy[direct]
    dfs(x + dx, y + dy, count + 1, direct+1)
    dfs(x + dx, y + dy, count + 1, direct)
    visited[desert_cafe[x][y]] = False

dxy = [[1, 1], [1, -1], [-1, -1], [-1, 1]]
T = int(input())
for tc in range(1, T+1):
    N = int(input())
    desert_cafe = [list(map(int, input().split())) for _ in range(N)]
    result = -1
    start_target = ()
    visited = [False] * 101

    for i in range(N):
        for j in range(N):
            start_target = (i, j)
            dfs(i, j, 0, 0)
    print(f'#{tc} {result}')
