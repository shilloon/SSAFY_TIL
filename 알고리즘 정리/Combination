def comb(arr, n):
    result = []
    if n == 1:
        return [[i] for i in arr]
    
    for i in range(len(arr)):
        elem = arr[i]
        for rest in comb(arr[i + 1:], n-1):
            result.append([elem] + rest)
    return result

print(comb([1,2,3,4], 3))


# 시간 초과나긴 하지만 공부용으로 만든 조합
def comb(num_list, dig, start=0):

    # 더이상 추가할 원소가 없을 시
    if dig == 0:
        return [[]]

    # 조합 구하기
    nums = []
    for i in range(start, len(num_list)):
        elem = num_list[i]
        for rest in comb(num_list, dig-1, i+1):
            nums.append([elem] + rest)

    return nums


def sum_count(num_list, k):

    count = 0

    # 조합의 총합이 K일시 카운트
    for dig in range(1, len(num_list)+1):
        comb_list = comb(num_list, dig)
        for c in comb_list:
            if sum(c) == k:
                count += 1

    return count


T = int(input())
for tc in range(1, T+1):

    N, K = map(int, input().split())
    A = list(map(int, input().split()))

    count = sum_count(A, K)

    print(f'#{tc} {count}')
