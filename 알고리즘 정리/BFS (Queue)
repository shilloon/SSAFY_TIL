from collections import deque


def bfs_maze(maze, start):
    N, M = len(maze), len(maze[0])
    q = deque([start])
    visited = set([start])
    distance = {start: 0}

    while q:
        x, y = q.popleft()
        for dx, dy in [(0,1), (1, 0), (0, -1), (-1, 0)]:
            nx, ny = x+dx, y+dy
            if 0 <= nx < N and 0 <= ny < M and maze[nx][ny] == 0 and (nx, ny) not in visited:
                visited.add((nx, ny))
                distance[(nx, ny)] = distance[(x, y)] + 1
                q.append((nx, ny))

    return distance

maze = [[0,0,1], [0,1,0], [0,0,0]]
print(bfs_maze(maze, (0,0)))
