def is_runway(runway, height):

    used = [False] * len(runway)

    for i in range(len(runway)-1):

        # 다 높이가 동일할 경우
        if runway[i] == runway[i + 1]:
            continue

        # 두 높이의 차이가 1보다 클 경우
        if abs(runway[i] - runway[i+1]) > 1:
            return 0

        # 현재 높이가 다음 높이보다 클 경우
        if runway[i] - runway[i+1] == 1:
            lower_height = runway[i+1]
            for j in range(i + 1, i+1+height):
                if j >= len(runway) or runway[j] != lower_height or used[j]:
                    return 0
                used[j] = True

        # 현재 높이가 다음 높이보다 작을 경우
        elif runway[i] - runway[i+1] == -1:
            lower_height = runway[i]
            for j in range(i, i-height, -1):
                if j < 0 or runway[j] != lower_height or used[j]:
                    return 0
                used[j]

    return 1

T = int(input())

for tc in range(1, T+1):

    N, X = map(int, input().split())

    runway = [list(map(int, input().split())) for _ in range(N)]
    runway_count = 0

    for i in range(N):
        col = []
        row = []
        for j in range(N):
            row.append(runway[i][j])
            col.append(runway[j][i])

        runway_count += is_runway(row, X)
        runway_count += is_runway(col, X)

    print(f'#{tc} {runway_count}')
