T = int(input())


def calc(group, cook):

    total = 0
    for i in range(len(group)):
        for j in range(i+1, len(group)):
            total += cook[group[i]][group[j]] + cook[group[j]][group[i]]

    return total


def dfs(idx, A, B, N, S):

    if len(A) > N//2 or len(B) > N//2:
        return float('inf')

    if idx == N:
        if len(A) == len(B):
            scoreA = calc(A, S)
            scoreB = calc(B, S)
            return abs(scoreA - scoreB)
        return float('inf')

    case1 = dfs(idx+1, A+[idx], B, N, S)
    case2 = dfs(idx+1, A, B+[idx], N, S)
    return min(case1, case2)

for tc in range(1, T+1):

    N = int(input())
    cook = [list(map(int, input().split())) for _ in range(N)]

    answer = dfs(0, [], [], N, cook)
    print(f'#{tc} {answer}')
